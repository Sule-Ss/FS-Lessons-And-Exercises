1 --> python -m venv env
2 --> source env/scripts/activate
3 --> pip install django
4 --> django-admin startproject projeadı .
5 --> pip freeze > requirements.txt
6 --> INSTALLED_APPS = [..., 'app'] yada : 'appadi.apps.AppadiConfig',
7 --> app içindeki urls:
	from django.urls import path
	from. import views

	urlpatterns=[path("", views.home)]

8 --> app içindeki views.py içine:

	from django.shortcuts import render
	def home(request):   
	return render(request, "index.html")

9 --> proje urls :

	urlpatterns = [
    	path('admin/', admin.site.urls),
   	path("", include("first.urls"))]

10 --> python manage.py migrate >>> tabloyu oluşturur
11 --> python manage.py makemigrations >> database i hazırlar
12 --> python -m pip install Pillow >>> görsel yükleme için 
13 --> görsel için proje dosyası içinde setttings.py : 

	# MEDIA FILES
	MEDIA_URL = '/media/'
	MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
14 --> görsel için proje dosyası içinde urls.py :
	from django.contrib import admin
	from django.urls import path, include
	from django.conf import settings
	from django.conf.urls.static import static

	urlpatterns = [
    		path('admin/', admin.site.urls),
    		path('', include('pages.urls')),
	] + static(settings.MEDIA_URL, document_doot = settings.MEDIA_ROOT)


15 --> python manage.py createsuperuser 
16 --> python manage.py shell 
17 --> pip install -r requirements.txt 
18 --> pip freeze > requirements.txt
19 --> 
19 --> 
19 --> 
19 --> 
19 --> 
19 --> 
19 --> 
19 --> 
19 --> 
19 --> 


  -------CRUD-----
1 --> read --> CLASSISMI.objects.all() 
1 --> create --> Course.objects.create(ATTR='', ATTR='') 
1 --> update --> CLASSISMI.objects.get(id=1).save() 
1 --> delete --> CLASSISMI.objects.get(id=1).delete() 

1 --> 	CLASSISMI.objects.order_by('name') --> sıralar
1 --> 	CLASSISMI.objects.order_by('-name') --> tersten sıralar.
1 --> 	CLASSISMI.objects.filter(available=True)


1 --> 


	MVT açılımı :

	Model : Veri tabanıyla olan ilşki/database tabloları
	View   : Mantıksal işlevler
	Template :  Görünüme yönelik işlevler
	{% tag %} 
	{{ variable }} 
	{{ variable|filter }} 



