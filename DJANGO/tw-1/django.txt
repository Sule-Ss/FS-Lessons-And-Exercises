Kontroller ve Komutlar : 
1.	python --version   >> python sürümünü kurulumunu kontrol için 
2.	pip list    >>   kurulu paketleri gösterir(pip python a ait paket yönetim sistemi)
3.	python -m pip install Django >> django yüklü değilse yükleyelim
4.	pip install virtualenv  >> VirtualEnv, projelerinizde gerekli olan paketleri sistemden bağımsız bir şekilde kurup, kullanmanızı sağlayacak sanal ortam sağlayan bir yapıdır.
5.	python -m venv env
6.	env/Scripts/activate >> scriptleri active eder.
7.	python -m django startproject projeadı  >>  django-admin startproject projeadı yerine kullanılır.
8.	içerisinde aynı isimde bir klasör daha oluşacak. Ona proje klasörü denir.
9.	proje genel bir klasör. Proje içerisine uygulamalar oluşturacağız.
10.	cd ile projenin içne girin.
11.	Uygulamanızı oluşturmak için Manage.py ile 
aynı dizinde olduğunuzdan emin olun ve şu komutu yazın:
12.	python manage.py startapp appadi   (app adinda büyük harf olmayacak)
13.	İstediğimiz kadar uygulama(app) oluşturabiliriz istersek bir tane üzerinden de projeyi götürebiliriz.
14.	Uygulamayı projenizde dikkate almak için, 
settings.py'de aşağıdaki gibi INSTALLED_APPS listesinde 
proje adınızı belirtmeniz gerekir:

INSTALLED_APPS = [
   'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # myapps
    'appadı' 	]
15.	py manage.py runserver	 (projeyi çalıştırır terminalde çıkan http ye git)
16.	ctrl + c  >> uygulamayı durdurur
17.	proje altında urls.py dosyasına gelelim. Url ekleme projeye gelen istekleri karşılar. Uygulama(app) dosyasında yeni bir urls.py dosyası oluşturalım.
18.	app içindeki urls içine :
from django.urls import path
from. import views

urlpatterns=[path("", views.home)]
19.	app içinde templates klasörü oluşturalım. isim opsiyonel değil. içerisinde index.html oluşturalım. içerisine  <h1>Hello World</h1> yazalım.
20.	yine app içindeki views.py içine gelelim:
from django.shortcuts import render
def home(request):   
return render(request, "index.html")
21.	Bunlar ne demek : urls.py içerisinde belirttiğimiz url sonucunda ilgili home metoduna ulaşacağız. views içerisindeki home index.html i return edecek. index.html i views dosyası aynı uygulama altındaki templates klasöründe arar ve getirir.
22.	app in çalışması için proje dosyası içindeki urls e tanıtılması gerek. Son hali:
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path("", include("first.urls"))]
23.	yeni bir path eklerken slash ın nerde olduğuna dikkat!  >> path('about/', include("first.urls"))
24.	pip install django >> proje/app  dosyası içinde tekrar kuralım çünkü sanal ortamdayız.
25.	projeyi tekrar çalıştıralım :
py manage.py runserver 
				
				Happy End :)

 MVT açılımı :
Model : Veri tabanıyla olan ilşki
View   : Mantıksal işlevler
Template :  Görünüme yönelik işlevler
{% tag %} --> tag
{{ variable }} --> variable
{{ variable|filter }} ---> filter

Migration :
python manage.py migrate
python manage.py createsuperuser